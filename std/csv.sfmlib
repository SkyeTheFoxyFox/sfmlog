# A library for parsing CSV files

# Parses CSV into either a list of lists, or if header is true, a list of tables
defmac ParseCSV output filePath delimiter header
    #defaults
    if equal delimiter null
        pset delimiter ","
    end
    if equal header null
        pset header false
    end

    file open file filePath
    file read csvData file
    file close file

    pset firstLine true 
    list from output

    strop split lines csvData "\n"
    for list line lines
        strop rematch comment line "^\s*//"
        if notEqual comment null
        elif equal line ""
        else
            strop split elements line delimiter
            if equal header false
                for enumerate i v elements
                    strop rematch isNum v "^(?:(?:-?[0-9]*.[0-9]+)|(?:-?[0-9]+))(?:e[0-9]+)?$"
                    if notEqual isNum null
                        strop num v v
                        list set elements v i
                    elif equal v "true"
                        list set elements true i
                    elif equal v "false"
                        list set elements false i
                    end
                end
                list append output elements
            else
                if equal firstLine true
                    pset headerLookup elements
                    pset firstLine false
                else
                    table from lineTable
                    for enumerate i v elements
                        strop rematch isNum v "^(?:(?:-?[0-9]*.[0-9]+)|(?:-?[0-9]+))(?:e[0-9]+)?$"
                        if notEqual isNum null
                            strop num v v
                        elif equal v "true"
                            pset v true
                        elif equal v "false"
                            pset v false
                        end
                        list get headerValue headerLookup i
                        table set lineTable v headerValue
                    end
                    list append output lineTable
                end
            end
        end
    end
end